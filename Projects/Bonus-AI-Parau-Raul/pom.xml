<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Basic project information -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>ai-training</groupId>
    <artifactId>Bonus-AI-Parau-Raul</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Machine Learning Library</name>

    <!-- Properties -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <!-- JavaFX version depends on your JDK; adjust if necessary -->
        <javafx.version>17.0.2</javafx.version>
        <!-- JUnit version -->
        <junit.version>5.8.2</junit.version>
    </properties>

    <!-- Dependencies -->
    <dependencies>
        <!-- JavaFX dependencies -->
        <!-- For JavaFX 11 and above, you need to include modules individually -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- JUnit for testing (optional) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Add other dependencies here if needed -->
    </dependencies>

    <!-- Build configuration -->
    <build>
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- Set the Java version -->
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!-- For Java 9 and above, use release instead -->
                    <!-- <release>${java.version}</release> -->
                </configuration>
            </plugin>

            <!-- Maven Surefire Plugin for testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

            <!-- JavaFX Maven Plugin (optional) -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>gui.MainApp</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Repositories (if needed) -->
    <repositories>
        <!-- Maven Central is included by default -->
        <!-- Add other repositories if required -->
    </repositories>
</project>
